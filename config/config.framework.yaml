network:
  server: 127.0.0.1:9020
  units:
    - 127.0.0.1:9021
    - 127.0.0.1:9022
    - 127.0.0.1:9023
    - 127.0.0.1:9024
    - 127.0.0.1:9025
general:
  f: 1
  max-active-requests: 1000
  verbosity: v
  logfile: false # true -> file, false -> stdout
  learning: true
  report-sequence: 2500
  exchange-sequence: 3000
benchmark:
  block-size: 10
  checkpoint-size: 5000
  catch-up-k: 2
  request-interval-micros: 100
  benchmark-interval-ms: 3000
  timeout: fixed
  timeout-trigger-interval-ms: 50
  client: basic
  closed-loop:
    enable: true
    num-client: 100
    delay-ms: 0
  leader-rotate-interval: 100
  aggregation-delay-ms: 200
workload:
  # lower for more contention
  contention-level: 100
  dataset-size: 100
  payload:
    request-size: 1000000
    reply-size: 1000000
  compute-factor: 0
  distribution:
    - 1 # 00
    - 0 # 04
    - 0 # 40
    - 0 # 44
  read-only-ratio: 0
fault:
  in-dark:
    # the affected entities will always be excluded from leader rotation
    # set it to be a `non-existing` node (e.g., 100) to avoid this
    affected-entities:
      - 1
    generator:
      advance: true
      init: false
      delay: 10000
      schedule:
        values:
          - false
          - true
        intervals:
          - 10000
  timeout:
    affected-entities:
      - 2
    generator:
      advance: true
      init: 0
      delay: 10000
      fixed:
        value: 0
  slow-proposal:
    # affected entities here are the malicious leaders
    # instead of victims of malicious leaders
    affected-entities:
      - 0
    attacking: true
    timer: 100
    
switching:
  protocol-pool:
    - pbft
    - zyzzyva
    - hotstuff
    - cheapbft
    - sbft
    - prime
  # debug-sequence:
  #   - cheapbft
  #   - hotstuff
  #   - prime
  #   - zyzzyva
  #   - pbft
  #   - sbft
