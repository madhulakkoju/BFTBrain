syntax = "proto3";

option java_package = "com.gbft.framework.data";
option java_multiple_files = true;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service EntityComm {
    rpc send_decision (LearningData) returns (google.protobuf.Empty) {}
}

service AgentComm {
    rpc send_data (LearningData) returns (google.protobuf.Empty) {}
}

message RequestData {
    enum Operation {
        NOP = 0;
        ADD = 1;
        SUB = 2;
        INC = 3;
        DEC = 4;
		READ_ONLY = 5;
    }
    
    int32 client = 1;
    int64 request_num = 2;
    
    int32 record = 3;
    Operation operation = 4;
    int32 value = 5;

    google.protobuf.Timestamp timestamp = 6;
    repeated LearningData report_quorum = 7;

    bytes request_dummy = 8;
    int32 compute_factor = 9;
    int32 reply_size = 10;

    int32 early_exec_result = 11;
    bool is_tnx_valid = 12;
    int64 current_version = 13;
}

message SmallBankRequestData {

    int32 client = 1;
    int64 request_num = 2;

    int32 sender = 3;
    int32 receiver = 4;
    int32 value = 5;

    google.protobuf.Timestamp timestamp = 6;
    repeated LearningData report_quorum = 7;

    bytes request_dummy = 8;
    int32 compute_factor = 9;
    int32 reply_size = 10;

    int32 early_exec_result = 11;
    bool is_tnx_valid = 12;
    int64 current_version = 13;
}

message MessageData {
    int64 sequence_num = 1;
    int64 view_num = 2;
    int32 message_type = 3;

    int32 source = 4;
    repeated int32 targets = 5;

    //repeated RequestData requests = 6;
    repeated SmallBankRequestData requests = 6;
    repeated int64 request_nums = 7;
    bool has_request_data = 8;
    bytes digest = 9;

	repeated int32 flags = 10;
    map<int64, int32> reply_data = 11;
    map<int32, int64> extra_values = 12;
    map<int32, bytes> extra_data = 13;

    google.protobuf.Timestamp timestamp = 14;
    FaultData fault = 15;
    FetchData fetch = 16;
    LearningData report = 17;
    SwitchingData switch = 18;

    repeated int64 aggregation_values = 19;

    bool is_endorsement_request = 20;

    int32 xov_state = 21; // 0: DO_ENDORSE -> all nodes, 1: ENDORSED -> client .........OX........ 3: Validate on all nodes
}

message SwitchingData {
    bool switch_ready = 1;
    string next_protocol = 2;
}

message LearningData {
    map<int32, float> report = 1;
    string next_protocol = 2;
}

message FetchData {
    bool is_request = 1;
    map<int32, int32> service_state = 2;
}

message FaultData {
    repeated int32 blocked_targets = 1;
    repeated int32 delayed_targets = 2;
    int64 delay = 3;
}

message MessageBlock {
    repeated MessageData message_data = 6;
}

message Event {
    enum EventType {
        INIT = 0;
        CONFIG = 1;
        READY = 2;
        PLUGIN_INIT = 3;
        START = 4;
        BLOCK = 5;
        STOP = 6;
        EXIT = 7;
        BENCHMARK_START = 8;
        BENCHMARK_REPORT = 9;
        MESSAGE = 10;
        CONNECTION = 11;
    }

    EventType event_type = 1;

    oneof event_data {
        UnitData unit_data = 2;
        ConfigData config_data = 3;
        PluginData plugin_data = 4;
        ReportData report_data = 5;
        MessageBlock message_block = 6;
        int32 target = 7;
    }
}

message UnitData {
    int32 unit = 1;
    int32 node_count = 2;
    int32 client_count = 3;
}

message ConfigData {
    map<string, string> data = 1;
    string defaultProtocol = 2;
    repeated UnitData units = 3;
}

message PluginData {
    string plugin_name = 1;
    int32 message_type = 2;
    bytes data = 3;
    
    int32 source = 4;
    repeated int32 targets = 5;
}

message ReportData {
    map<string, ReportItem> report_data = 1;

    message ReportItem {
        map<string, string> item_data = 2;
    }
}

